{"version":3,"sources":["components/sideBar/index.jsx","components/mainWorkspace/TableInput.jsx","components/mainWorkspace/table.jsx","components/BoardView/BoardView.jsx","components/mainWorkspace/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageNameInput","setInput","setpageList","useState","pageName","setPageName","className","type","onChange","e","target","value","onClick","pagesName","P_ID","Math","floor","random","arr","addPage","SideBar","pageList","input","map","item","id","NewPageList","filter","items","deletePAge","TableInput","setId","setTitle","setDiscription","setStatus","setCreated_at","setDue_date","n","Date","y","getFullYear","m","getMonth","DatenTime","getDate","getHours","getMinutes","getSeconds","Table","tableData","setTableData","tInput","setTInput","title","discription","status","created_at","updated_at","setUpdated_at","due_date","AddBTN","SubmitBTN","d","time","Data","console","log","submited","BoardView","MainWorkspace","BoardTable","setBoardTable","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bed9499a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './sideBar.css';\r\n\r\nfunction PageNameInput({setInput,setpageList}){\r\n    const [pageName,setPageName]=useState(\"\")\r\n    const addPage=()=>{\r\n        const pagesName = {\r\n            P_ID: Math.floor(Math.random()*1000),\r\n            pageName,\r\n        };\r\n        setpageList(arr=>[...arr,pagesName]);\r\n        setInput(false);\r\n        \r\n    }\r\n    return(\r\n        <div className=\"pageinput\">\r\n            <input type=\"text\" onChange={(e)=>{setPageName(e.target.value)}}></input>\r\n            <button type=\"submit\" onClick={()=>{addPage();}}>Add</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction SideBar() {\r\n    // eslint-disable-next-line\r\n    const [pageList,setpageList] = useState([]);\r\n    const [input,setInput] = useState(false);\r\n    const deletePAge=(id)=>{\r\n        const oldPageList = [...pageList];\r\n        const NewPageList = oldPageList.filter((items)=>items.P_ID !== id);\r\n        setpageList(NewPageList);\r\n    }\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <div className=\"signIn\">\r\n                <h4>Sign in</h4>\r\n            </div>\r\n            <div className=\"modes\">\r\n                <div className=\"Dark\">Dark</div>\r\n                <div className=\"Light\">Light</div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"fav\">\r\n                <h1 className=\"favhead\">FAVORITES</h1>\r\n                <div className=\"favList\">\r\n                    Empty\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"page\">\r\n                <h1 className=\"pagehead\">PAGES</h1>\r\n                <div className=\"pageList\">\r\n                    {pageList.map((item)=>(\r\n                        <div key={item.P_ID} className=\"PageItems\">\r\n                            <div className=\"name\">{item.pageName}</div>\r\n                            <div className=\"deleteBTN\" onClick={()=>{deletePAge(item.P_ID)}}>D</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {input? <PageNameInput setInput={setInput} setpageList={setpageList}/> : null}\r\n\r\n                <div className=\"addBTN\" onClick={()=>{setInput(true)}}>\r\n                    + Add Page\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default SideBar;","function TableInput({setId,setTitle,setDiscription,setStatus,setCreated_at,setDue_date}){\r\n  \r\n    var n =  new Date();\r\n    var y = n.getFullYear();\r\n    var m = n.getMonth() + 1;\r\n    var d = n.getDate();\r\n    var time = n.getHours() + \":\" + n.getMinutes() + \":\" + n.getSeconds();\r\n    var DatenTime = d+\"-\"+m+\"-\"+y+\"  \"+time;\r\n    return(\r\n        <>\r\n           <tr>\r\n                <td >\r\n                    {/* ID */}\r\n                    {/* {setId(id=>id+1)} */}\r\n                </td>\r\n                <td>\r\n                    {/* title */}\r\n                    <input type=\"text\" onChange={(e)=>{setTitle(e.target.value)}}/>\r\n                </td>\r\n                <td>\r\n                    {/* Description */}\r\n                    <input type=\"text\" onChange={(e)=>{setDiscription(e.target.value)}}/>\r\n                </td>\r\n                <td>\r\n                    {/* Status */}\r\n                    <input type=\"text\" onChange={(e)=>{setStatus(e.target.value)}}/>\r\n                </td>\r\n                <td>\r\n                    {/* Created_at */}\r\n                    {DatenTime}\r\n                    {setCreated_at(DatenTime)}\r\n                </td>\r\n                <td>\r\n                    {/* Upadated_at */}                    \r\n                </td>\r\n                <td>\r\n                    {/* Due_Date */}\r\n                    <input type=\"date\" onChange={(e)=>{setDue_date(e.target.value)}}/>\r\n                </td>\r\n            </tr>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableInput;","import React, { useState } from \"react\";\r\nimport TableInput from \"./TableInput\";\r\n\r\n\r\nfunction Table({tableData, setTableData}){\r\n    \r\n    const [tInput, setTInput] = useState(false);\r\n    const [id,setId] = useState(100);\r\n    const [title,setTitle] = useState();\r\n    const [discription,setDiscription] = useState();\r\n    const [status,setStatus] = useState();\r\n    const [created_at,setCreated_at] = useState();\r\n    const [updated_at,setUpdated_at] = useState();\r\n    const [due_date,setDue_date] = useState();\r\n   \r\n\r\n    const AddBTN=()=>{\r\n        return(\r\n            <div className=\"addBTN\" onClick={()=>{setTInput(true)}}>\r\n                    + Add\r\n                </div>\r\n        )\r\n    }\r\n    const SubmitBTN=()=>{\r\n\r\n        const submited=()=>{\r\n            var n =  new Date();\r\n            var y = n.getFullYear();\r\n            var m = n.getMonth() + 1;\r\n            var d = n.getDate();\r\n            var time = n.getHours() + \":\" + n.getMinutes() + \":\" + n.getSeconds();\r\n            var DatenTime = d+\"-\"+m+\"-\"+y+\"  \"+time;\r\n            setUpdated_at(DatenTime);\r\n            setId(id=>id+1)\r\n            const Data = {\r\n                id,\r\n                title,\r\n                discription,\r\n                status,\r\n                created_at,\r\n                updated_at,\r\n                due_date,\r\n            }\r\n            setTableData(arr=>[...arr,Data]);\r\n            console.log(tableData);\r\n            setTInput(false);\r\n        }\r\n        return(\r\n            <div className=\"addBTN\" onClick={()=>{submited()}}>\r\n                + Submit\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"Table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Status</th>\r\n                        <th>Created_at</th>\r\n                        <th>Updated_at</th>\r\n                        <th>Due_Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableData.map((item)=>(\r\n                        <tr key={item.id}>\r\n                            <td>#{item.id}</td>\r\n                            <td>{item.title}</td>\r\n                            <td>{item.discription}</td>\r\n                            <td>{item.status}</td>\r\n                            <td>{item.created_at}</td>\r\n                            <td>{item.updated_at}</td>\r\n                            <td>{item.due_date}</td>\r\n                        </tr>\r\n                    ))}\r\n                    {tInput? <TableInput \r\n                                setTableData={setTableData}\r\n                                id={id} \r\n                                setId={setId} \r\n                                setTitle={setTitle} \r\n                                setDiscription={setDiscription} \r\n                                setStatus={setStatus} \r\n                                setCreated_at={setCreated_at} \r\n                                setDue_date={setDue_date} \r\n                            />: null}\r\n                    \r\n                </tbody>\r\n            </table>\r\n            {tInput? <SubmitBTN/> : <AddBTN/>}\r\n        </div>\r\n    )\r\n}\r\nexport default Table;","\r\nfunction BoardView(){\r\n\r\n    return(\r\n        <div className=\"BoardView\">\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default BoardView;","import { useState } from \"react\";\r\nimport SideBar from \"../sideBar\";\r\nimport './mainWorkspace.css';\r\nimport Table from \"./table\";\r\nimport BoardView from \"../BoardView/BoardView\";\r\n\r\nfunction MainWorkspace({tableData, setTableData}){\r\n    const [BoardTable, setBoardTable] = useState(true)\r\n\r\n    return(\r\n        <div className=\"mainWorkspace\">\r\n            <SideBar/>\r\n            <div className=\"WorkSpace\">\r\n                <div className=\"TableBoard\">\r\n                    <div className=\"tableView\" onClick={()=>{setBoardTable(true)}}>Table</div>\r\n                    <div className=\"boardView\" onClick={()=>{setBoardTable(false)}}>Board</div>\r\n                </div>\r\n                {BoardTable? <Table tableData={tableData} setTableData={setTableData}/> : <BoardView tableData={tableData}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainWorkspace;","import MainWorkspace from './components/mainWorkspace';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [tableData , setTableData] = useState([]);\n  return (\n    <div className=\"App\">\n      <MainWorkspace tableData={tableData} setTableData={setTableData}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}