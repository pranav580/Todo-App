{"version":3,"sources":["components/sideBar/pageinptu.jsx","components/sideBar/index.jsx","components/mainWorkspace/TableInput.jsx","components/mainWorkspace/table.jsx","components/BoardView/card.jsx","components/BoardView/boardView.jsx","components/mainWorkspace/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageNameInput","setInput","setpageList","useState","pageName","setPageName","className","type","onChange","e","target","value","onClick","pagesName","P_ID","Math","floor","random","arr","addPage","SideBar","pageList","input","map","item","id","NewPageList","filter","items","console","log","deletePAge","TableInput","setId","setTitle","setDiscription","setStatus","setCreated_at","setDue_date","DateTime","n","Date","y","getFullYear","m","getMonth","getDate","getHours","getMinutes","getSeconds","name","Table","tableData","setTableData","tInput","setTInput","title","discription","status","created_at","updated_at","setUpdated_at","due_date","AddBTN","SubmitBTN","Time","Data","submited","Card","index","draggableId","toString","provided","draggableProps","dragHandleProps","ref","innerRef","BoardView","completedTodos","setcompletedTodos","onDragEnd","result","source","destinatoin","droppableId","add","active","complete","splice","droppableProps","placeholder","MainWorkspace","BoardTable","setBoardTable","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.511f6acc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction PageNameInput({setInput,setpageList}){\r\n    const [pageName,setPageName]=useState(\"\")\r\n    const addPage=()=>{\r\n        const pagesName = {\r\n            P_ID: Math.floor(Math.random()*1000),\r\n            pageName,\r\n            \r\n        };\r\n        setpageList(arr=>[...arr,pagesName]);\r\n        setInput(false);\r\n        \r\n    }\r\n    return(\r\n        <div className=\"pageinput\">\r\n            <input type=\"text\" onChange={(e)=>{setPageName(e.target.value)}}></input>\r\n            <button type=\"submit\" onClick={()=>{addPage();}}>Add</button>\r\n        </div>\r\n    )\r\n};\r\nexport default PageNameInput;","import { useState } from 'react';\r\nimport PageNameInput from './pageinptu';\r\nimport './sideBar.css';\r\n\r\n\r\n\r\nfunction SideBar({pageList,setpageList}) {\r\n    \r\n    const [input,setInput] = useState(false);\r\n\r\n    const deletePAge=(id)=>{\r\n        const oldPageList = [...pageList];\r\n        const NewPageList = oldPageList.filter((items)=>items.P_ID !== id);\r\n        setpageList(NewPageList);\r\n        console.log(pageList);\r\n    }\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <div className=\"signIn\">\r\n                <h4>Sign in</h4>\r\n            </div>\r\n            <div className=\"modes\">\r\n                <div className=\"Dark\">Dark</div>\r\n                <div className=\"Light\">Light</div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"fav\">\r\n                <h1 className=\"favhead\">FAVORITES</h1>\r\n                <div className=\"favList\">\r\n                    Empty\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"page\">\r\n                <h1 className=\"pagehead\">PAGES</h1>\r\n                <div className=\"pageList\">\r\n                    {pageList.map((item)=>(\r\n                        <div key={item.P_ID} className=\"PageItems\">\r\n                            <div className=\"name\">{item.pageName}</div>\r\n                            <div className=\"deleteBTN\" onClick={()=>{deletePAge(item.P_ID)}}>D</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {input? <PageNameInput setInput={setInput} setpageList={setpageList}/> : null}\r\n\r\n                <div className=\"addBTN\" onClick={()=>{setInput(true)}}>\r\n                    + Add Page\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default SideBar;","function TableInput({setId,setTitle,setDiscription,setStatus,setCreated_at,setDue_date}){\r\n  \r\n    const DateTime=()=>{\r\n        var n =  new Date();\r\n        var y = n.getFullYear();\r\n        var m = n.getMonth() + 1;\r\n        var d = n.getDate();\r\n        var time = n.getHours() + \":\" + n.getMinutes() + \":\" + n.getSeconds();\r\n        var DatenTime = d+\"-\"+m+\"-\"+y+\"  \"+time;\r\n        return(DatenTime)\r\n    }\r\n    \r\n    return(\r\n        <>\r\n           <tr>\r\n                <td >\r\n                    {/* ID */}\r\n                    {/* {setId(id=>id+1)} */}\r\n                </td>\r\n                <td>\r\n                    {/* title */}\r\n                    <input type=\"text\" onChange={(e)=>{setTitle(e.target.value)}}/>\r\n                </td>\r\n                <td>\r\n                    {/* Description */}\r\n                    <input type=\"text\" onChange={(e)=>{setDiscription(e.target.value)}}/>\r\n                </td>\r\n                <td>\r\n                    {/* Status */}\r\n                    {/* <input type=\"text\" onChange={(e)=>{setStatus(e.target.value)}}/> */}\r\n                    <select name=\"status\" onChange={(e)=>{setStatus(e.target.value)}}>\r\n                        <option value=\"To Do\">To Do</option>\r\n                        <option value=\"Doing\">Doing</option>\r\n                        <option value=\"Done\">Done</option>\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    {/* Created_at */}\r\n                    {DateTime()}\r\n                    {setCreated_at(DateTime)}\r\n                </td>\r\n                <td>\r\n                    {/* Upadated_at */}                    \r\n                </td>\r\n                <td>\r\n                    {/* Due_Date */}\r\n                    <input type=\"date\" onChange={(e)=>{setDue_date(e.target.value)}}/>\r\n                </td>\r\n            </tr>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableInput;","import React, { useState } from \"react\";\r\nimport TableInput from \"./TableInput\";\r\n\r\n\r\nfunction Table({tableData, setTableData}){\r\n    \r\n    const [tInput, setTInput] = useState(false);\r\n    const [id,setId] = useState(100);\r\n    const [title,setTitle] = useState();\r\n    const [discription,setDiscription] = useState();\r\n    const [status,setStatus] = useState(\"To do\");\r\n    const [created_at,setCreated_at] = useState();\r\n    const [updated_at,setUpdated_at] = useState();\r\n    const [due_date,setDue_date] = useState();\r\n   \r\n\r\n    const AddBTN=()=>{\r\n        return(\r\n            <div className=\"addBTN\" onClick={()=>{setTInput(true)}}>\r\n                    + Add\r\n                </div>\r\n        )\r\n    }\r\n    const SubmitBTN=()=>{\r\n\r\n        const submited=()=>{\r\n            var n =  new Date();\r\n            var y = n.getFullYear();\r\n            var m = n.getMonth() + 1;\r\n            var d = n.getDate();\r\n            var time = n.getHours() + \":\" + n.getMinutes() + \":\" + n.getSeconds();\r\n            var Time = d+\"-\"+m+\"-\"+y+\"  \"+time;\r\n            setUpdated_at(Time);\r\n            setCreated_at(Time);\r\n            setId(id=>id+1)\r\n            const Data = {\r\n                id,\r\n                title,\r\n                discription,\r\n                status,\r\n                created_at,\r\n                updated_at,\r\n                due_date,\r\n            }\r\n            setTableData(arr=>[...arr,Data]);\r\n            console.log(tableData);\r\n            setTInput(false);\r\n        }\r\n        return(\r\n            <div className=\"addBTN\" onClick={()=>{submited()}}>\r\n                + Submit\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"Table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Status</th>\r\n                        <th>Created_at</th>\r\n                        <th>Updated_at</th>\r\n                        <th>Due_Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableData.map((item)=>(\r\n                        <tr key={item.id}>\r\n                            <td>#{item.id}</td>\r\n                            <td>{item.title}</td>\r\n                            <td>{item.discription}</td>\r\n                            <td>{item.status}</td>\r\n                            <td>{item.created_at}</td>\r\n                            <td>{item.updated_at}</td>\r\n                            <td>{item.due_date}</td>\r\n                        </tr>\r\n                    ))}\r\n                    {tInput? <TableInput \r\n                                setTableData={setTableData}\r\n                                id={id} \r\n                                setId={setId} \r\n                                setTitle={setTitle} \r\n                                setDiscription={setDiscription} \r\n                                setStatus={setStatus} \r\n                                setCreated_at={setCreated_at}\r\n                                setDue_date={setDue_date} \r\n                            />: null}\r\n                    \r\n                </tbody>\r\n            </table>\r\n            {tInput? <SubmitBTN/> : <AddBTN/>}\r\n        </div>\r\n    )\r\n}\r\nexport default Table;","import { Draggable } from 'react-beautiful-dnd'\r\nconst Card = ({items,index})=>{\r\n    \r\n    return(\r\n        <Draggable draggableId={index.toString()} index={index}>\r\n        {\r\n            (provided)=>(\r\n                <div className=\"Card\" {...provided.draggableProps}{...provided.dragHandleProps} ref={provided.innerRef}>\r\n                    {items}\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Card;","import { DragDropContext,Droppable} from 'react-beautiful-dnd'\r\nimport Card from \"./card\";\r\nimport \"./BoardView.css\"\r\nimport { useState } from 'react';\r\n\r\nfunction BoardView({ tableData, setTableData }){\r\n    const [completedTodos, setcompletedTodos] = useState([]);\r\n    const onDragEnd=(result)=>{\r\n        const {source, destinatoin} = result;\r\n        if(!destinatoin) return;\r\n        if(destinatoin.droppableId===source.droppableId && destinatoin.index===source.index) return;\r\n\r\n        let add,active = tableData,complete=completedTodos;\r\n        if(source.droppableId === 'Todos'){\r\n            add = active[source.index];\r\n            active.splice(source.index, 1)\r\n        }else{\r\n            add = complete[source.index];\r\n            complete.splice(source.index, 1)\r\n        }\r\n\r\n        if(source.droppableId === 'Todos'){\r\n            active.splice(source.index, 0,add)\r\n        }else{\r\n            complete.splice(source.index, 0,add)\r\n        }\r\n\r\n        setcompletedTodos(complete);\r\n        setTableData(active);\r\n    }\r\n    return(\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"BoardView\">\r\n            <Droppable droppableId=\"TodosList\">\r\n                {\r\n                    (provided)=>(\r\n                        <div className=\"Todos\" ref={provided.innerRef}{...provided.droppableProps}>\r\n                        <span className=\"TodoHead\">Todos</span>\r\n                        {tableData.map((items,index)=>(\r\n                            <Card items={items.title} index={index.toString()} key={index}/>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            </Droppable>\r\n            <Droppable droppableId=\"TodosDone\">\r\n                {\r\n                    (provided)=>(\r\n                        <div className=\"Done\" ref={provided.innerRef}{...provided.droppableProps}>\r\n                            <span className=\"TodoHead2\">Done</span>\r\n                            {completedTodos.map((items,index)=>(\r\n                               <Card items={items} index={index}/>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            </Droppable>            \r\n        </div>\r\n        </DragDropContext>\r\n    )\r\n}\r\nexport default BoardView;","import { useState } from \"react\";\r\nimport SideBar from \"../sideBar\";\r\nimport './mainWorkspace.css';\r\nimport Table from \"./table\";\r\nimport BoardView from \"../BoardView/boardView\";\r\n\r\nfunction MainWorkspace({tableData, setTableData, pageList, setpageList }){\r\n    const [BoardTable, setBoardTable] = useState(true)\r\n    \r\n    return(\r\n        <div className=\"mainWorkspace\">\r\n            <SideBar pageList={pageList} setpageList={setpageList} />\r\n            <div className=\"WorkSpace\">\r\n                <div className=\"TableBoard\">\r\n                    <div className=\"tableView\" onClick={()=>{setBoardTable(true)}}>Table</div>\r\n                    <div className=\"boardView\" onClick={()=>{setBoardTable(false)}}>Board</div>\r\n                </div>\r\n                {BoardTable? <Table tableData={tableData} setTableData={setTableData}/> : <BoardView tableData={tableData} setTableData={setBoardTable}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainWorkspace;","import MainWorkspace from './components/mainWorkspace';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [tableData , setTableData] = useState([]);\n  const [pageList,setpageList] = useState([]);\n  return (\n    <div className=\"App\">\n      <MainWorkspace \n        tableData={tableData}\n        setTableData={setTableData} \n        pageList={pageList} \n        setpageList={setpageList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}